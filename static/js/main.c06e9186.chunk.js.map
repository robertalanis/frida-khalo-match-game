{"version":3,"sources":["components/Image/Image.js","components/Instructions/Instructions.js","components/Wrapper/Wrapper.js","components/Score/Score.js","App.js","index.js"],"names":["Image","props","Col","xs","Card","CardImg","alt","title","src","image","id","onClick","shuffleScoreCard","className","Instructions","useState","modal","setModal","toggle","Button","color","style","marginBottom","marginTop","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Wrapper","Container","Row","children","Score","paddingTop","score","Progress","value","status","App","state","paintings","clickedCards","goal","includes","setState","push","length","i","j","Math","floor","random","fluid","md","Jumbotron","padding","this","map","painting","key","href","target","rel","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c06e9186.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardImg, Container, Row, Col } from \"reactstrap\";\nimport \"./Image.css\";\n\nconst Image = (props) => (\n\t<Col xs=\"4\">\n\t\t<Card>\n\t\t\t<CardImg\n\t\t\t\talt={props.title}\n\t\t\t\tsrc={props.image}\n\t\t\t\tid={props.id}\n\t\t\t\tonClick={() => props.shuffleScoreCard(props.id)}\n\t\t\t\tclassName=\"shuffleScore\"\n\t\t\t></CardImg>\n\t\t</Card>\n\t</Col>\n);\n\nexport default Image;\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst Instructions = (props) => {\n\tconst [modal, setModal] = useState(false);\n\n\tconst toggle = () => setModal(!modal);\n\n\treturn (\n\t\t<div>\n\t\t\t<Button color=\"dark\" onClick={toggle} style={{ marginBottom: \"1rem\", marginTop: \"1rem\" }}>\n\t\t\t\tInstructions\n\t\t\t</Button>\n\n\t\t\t<Modal isOpen={modal} toggle={toggle}>\n\t\t\t\t<ModalHeader toggle={toggle}>Instructions</ModalHeader>\n\t\t\t\t<ModalBody>\n          <ul>\n            <li>Every time an image is clicked, the images rendered to the page will shuffle themselves in a random order.</li>\n            <li>The score will be incremented when clicking an image for the first time.</li>\n            <li>If the same image is clicked twice you will lose and the game will reset.</li>\n            <li>You will win if you succesfully click on all nine images</li>\n          </ul>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"secondary\" onClick={toggle}>\n\t\t\t\t\t\tExit\n\t\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nexport default Instructions;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"./Wrapper.css\";\n\n//stateless component\nconst Wrapper = (props) => (\n\t<Container className=\"wrapper\">\n\t\t<Row>{props.children}</Row>\n\t</Container>\n);\n\nexport default Wrapper;\n","import React from \"react\";\nimport { Progress } from \"reactstrap\";\nimport \"./Score.css\";\n\nconst Score = (props) => (\n\t<div className=\"gameScore\">\n\t\t<div>\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h3 style={{paddingTop:\"30px\"}}>Score: {props.score} of 9</h3>\n\t\t\t</div>\n\t\t\t<Progress color=\"info\" value={(props.score / 9) * 100} />\n\t\t</div>\n\t\t<h3 className=\"status\">{props.status}</h3>\n\t</div>\n);\n\nexport default Score;\n","import React, { Component } from \"react\";\n\nimport Image from \"./components/Image\";\nimport Instructions from \"./components/Instructions\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\n\nimport paintings from \"./paintings.json\";\nimport \"./App.css\";\n\nimport { Jumbotron, Container, Row, Col } from \"reactstrap\";\n\n\nclass App extends Component {\n\tstate = {\n\t\tpaintings,\n\t\tclickedCards: [],\n\t\tscore: 0,\n\t\tgoal: 8,\n\t\tstatus: \"\",\n\t};\n\n\t//shuffle the painting cards in the browser when clicked\n\tshuffleScoreCard = (id) => {\n\t\tlet clickedCards = this.state.clickedCards;\n\n\t\tif (clickedCards.includes(id)) {\n\t\t\tthis.setState({\n\t\t\t\tclickedCards: [],\n\t\t\t\tscore: 0,\n\t\t\t\tstatus: \"Game Over! Click to play again!\",\n\t\t\t});\n\t\t\treturn;\n\t\t} else {\n\t\t\tclickedCards.push(id);\n\n\t\t\tif (clickedCards.length === 9) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tscore: 9,\n\t\t\t\t\tstatus: \"You Won! Click to play again!\",\n\t\t\t\t\tclickedCards: [],\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setState({ paintings, clickedCards, score: clickedCards.length, status: \" \" });\n\n\t\t\tfor (let i = paintings.length - 1; i > 0; i--) {\n\t\t\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t\t\t[paintings[i], paintings[j]] = [paintings[j], paintings[i]];\n\t\t\t}\n\t\t}\n\t};\n\n\t// Map over this.state.cards and render a Card component for each card object\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid className=\"App\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md=\"6\">\n\t\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t\t<Jumbotron className=\"App-title\" style={{padding:\"20px\"}}>\n\t\t\t\t\t\t\t\t<h1>Frida Khalo</h1>\n\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t<h2>Click Game</h2>\n\t\t\t\t\t\t\t\t<Instructions></Instructions>\n\t\t\t\t\t\t\t</Jumbotron>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md=\"6\">\n\t\t\t\t\t\t<Score score={this.state.score} goal={9} status={this.state.status} />\n\t\t\t\t\t\t<Wrapper>\n\t\t\t\t\t\t\t{this.state.paintings.map((painting) => (\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tshuffleScoreCard={this.shuffleScoreCard}\n\t\t\t\t\t\t\t\t\tid={painting.id}\n\t\t\t\t\t\t\t\t\tkey={painting.id}\n\t\t\t\t\t\t\t\t\timage={painting.image}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Wrapper>\n\t\t\t\t\t\t<footer>\n\t\t\t\t\t\t<p style={{marginBottom:\"0px\"}}>\n\t\t\t\t\t\t\tDesigned by Robert Alanis.\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://github.com/robertalanis/clicky-game\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\tGitHub Repository\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</footer>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}